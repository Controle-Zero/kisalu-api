// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Cliente {
  id                  String               @id @default(uuid())
  bi                  String               @unique
  nome                String
  dataNasc            DateTime
  morada              String
  email               String               @unique
  telefone            String
  password            String
  refreshTokenCliente RefreshTokenCliente?
  atividades          Atividade[]
  loginInfo           LoginInfo[]

  @@map("clientes")
}

model Prestador {
  id                    String                 @id @default(uuid())
  bi                    String                 @unique
  nome                  String
  dataNasc              DateTime
  morada                String
  email                 String                 @unique
  telefone              String
  password              String
  estado                String                 @default("DISPONIVEL")
  iban                  String
  classificacao         Float                  @default(0)
  numAvaliacoes         Int                    @default(0)
  rate                  Float                  @default(0)
  descricao             String?                @db.Text
  refreshTokenPrestador RefreshTokenPrestador?
  atividades            Atividade[]
  categorias            PrestadorCategoria[]
  loginInfo             LoginInfo[]

  @@map("prestadores")
}

model Atividade {
  id             String    @id @default(uuid())
  dataCriado     DateTime  @default(now())
  dataFinalizado DateTime?
  valorAssociado Float?
  numRef         Int?
  estado         String    @default("PENDENTE")
  prestadorId    String
  clienteId      String
  categoriaId    String
  descricao      String?
  Cliente        Cliente   @relation(fields: [clienteId], references: [id])
  Prestador      Prestador @relation(fields: [prestadorId], references: [id])
  Categoria      Categoria @relation(fields: [categoriaId], references: [id])

  @@map("atividades")
}

model Categoria {
  id          String               @id @default(uuid())
  titulo      String
  imageUrl    String
  Atividade   Atividade[]
  prestadores PrestadorCategoria[]

  @@map("categorias")
}

model PrestadorCategoria {
  idPrestador String
  idCategoria String
  prestador   Prestador @relation(fields: [idPrestador], references: [id])
  categoria   Categoria @relation(fields: [idCategoria], references: [id])

  @@id([idPrestador, idCategoria])
}

model RefreshTokenCliente {
  id        String  @id @default(uuid())
  expiraEm  Int
  cliente   Cliente @relation(fields: [clienteId], references: [id])
  clienteId String  @unique

  @@map("refresh_token_cliente")
}

model RefreshTokenPrestador {
  id          String    @id @default(uuid())
  expiraEm    Int
  prestador   Prestador @relation(fields: [prestadorId], references: [id])
  prestadorId String    @unique

  @@map("refresh_token_prestador")
}

model LoginInfo {
  id          String     @id @default(uuid())
  token       String
  device      Json
  createdAt   DateTime   @default(now())
  Cliente     Cliente?   @relation(fields: [clienteId], references: [id])
  clienteId   String?
  Prestador   Prestador? @relation(fields: [prestadorId], references: [id])
  prestadorId String?

  @@map("login_info")
}
